/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package com.dianping.cat.configuration.model.transform;

import com.dianping.cat.configuration.model.IVisitor;
import com.dianping.cat.configuration.model.entity.ClientConfig;
import com.dianping.cat.configuration.model.entity.Domain;
import com.dianping.cat.configuration.model.entity.Host;
import com.dianping.cat.configuration.model.entity.Property;
import com.dianping.cat.configuration.model.entity.Server;

public abstract class BaseVisitor implements IVisitor {
   @Override
   public void visitConfig(ClientConfig config) {
      if (config.getHost() != null) {
         visitHost(config.getHost());
      }

      if (config.getDomain() != null) {
         visitDomain(config.getDomain());
      }

      for (Server server : config.getServers()) {
         visitServer(server);
      }

      for (Property property : config.getProperties().values()) {
         visitProperty(property);
      }
   }

   @Override
   public void visitDomain(Domain domain) {
   }

   @Override
   public void visitHost(Host host) {
   }

   @Override
   public void visitProperty(Property property) {
   }

   @Override
   public void visitServer(Server server) {
   }
}
