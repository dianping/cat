/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package com.dianping.cat.configuration.model.entity;

import java.util.LinkedHashMap;
import java.util.Map;

import com.dianping.cat.configuration.model.BaseEntity;
import com.dianping.cat.configuration.model.IVisitor;

public class Domain extends BaseEntity<Domain> {
   private String m_name;

   private Integer m_id;

   private String m_tenantToken;

   private boolean m_enabled = true;

   private Map<String, String> m_dynamicAttributes = new LinkedHashMap<String, String>();

   public Domain() {
   }

   @Override
   public void accept(IVisitor visitor) {
      visitor.visitDomain(this);
   }

   @Override
   public boolean equals(Object obj) {
      if (obj instanceof Domain) {
         Domain _o = (Domain) obj;

         if (!equals(getName(), _o.getName())) {
            return false;
         }

         if (!equals(getId(), _o.getId())) {
            return false;
         }

         if (!equals(getTenantToken(), _o.getTenantToken())) {
            return false;
         }

         if (getEnabled() != _o.getEnabled()) {
            return false;
         }

         if (!m_dynamicAttributes.equals(_o.getDynamicAttributes())) {
            return false;
         }

         return true;
      }

      return false;
   }

   public String getDynamicAttribute(String name) {
      return m_dynamicAttributes.get(name);
   }

   public Map<String, String> getDynamicAttributes() {
      return m_dynamicAttributes;
   }

   public boolean getEnabled() {
      return m_enabled;
   }

   public Integer getId() {
      return m_id;
   }

   public String getName() {
      return m_name;
   }

   public String getTenantToken() {
      return m_tenantToken;
   }

   @Override
   public int hashCode() {
      int hash = 0;

      hash = hash * 31 + (m_name == null ? 0 : m_name.hashCode());
      hash = hash * 31 + (m_id == null ? 0 : m_id.hashCode());
      hash = hash * 31 + (m_tenantToken == null ? 0 : m_tenantToken.hashCode());
      hash = hash * 31 + (m_enabled ? 1 : 0);
      hash = hash * 31 + m_dynamicAttributes.hashCode();

      return hash;
   }

   public boolean isEnabled() {
      return m_enabled;
   }

   @Override
   public void mergeAttributes(Domain other) {
      for (Map.Entry<String, String> e : other.getDynamicAttributes().entrySet()) {
         m_dynamicAttributes.put(e.getKey(), e.getValue());
      }

      if (other.getName() != null) {
         m_name = other.getName();
      }

      if (other.getId() != null) {
         m_id = other.getId();
      }

      if (other.getTenantToken() != null) {
         m_tenantToken = other.getTenantToken();
      }

      m_enabled = other.getEnabled();
   }

   public Domain setDynamicAttribute(String name, String value) {
      m_dynamicAttributes.put(name, value);
      return this;
   }

   public Domain setEnabled(boolean enabled) {
      m_enabled = enabled;
      return this;
   }

   public Domain setId(Integer id) {
      m_id = id;
      return this;
   }

   public Domain setName(String name) {
      m_name = name;
      return this;
   }

   public Domain setTenantToken(String tenantToken) {
      m_tenantToken = tenantToken;
      return this;
   }

}
